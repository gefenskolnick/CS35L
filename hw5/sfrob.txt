Note: sfrob and sfrobu are compiled with optimization -O2

----------------------------------------------------------------------------

1. Measure any differences in performance between sfrob and sfrobu using the time command. 
Run your program on inputs of varying numbers of input lines, and estimate the number of comparisons as a function of the number of input lines.

I write a bash file to generate lines with specificed number

	#!/bin/bash

	export LC_ALL='C'
	> $2

	for (( i=0; i<$1; i++))
	do
	    R=$(($RANDOM%7+1))
	    dd if=/dev/urandom bs=$R count=1 status=none >> $2
	    echo -n ' ' >> $2
	done


[classzfu@lnxsrv07 ~/35l/hw5]$ ./bashfile.sh 1000 l1000.txt
[classzfu@lnxsrv07 ~/35l/hw5]$ ./bashfile.sh 10000 l10000.txt
[classzfu@lnxsrv07 ~/35l/hw5]$ ./bashfile.sh 100000 l100000.txt
[classzfu@lnxsrv07 ~/35l/hw5]$ ./bashfile.sh 1000000 l1000000.txt

For the number of comparisons as a function of the number of input lines, it should be based on the algorithm of qsort.
By using a counter in during comparsion, and print out as stdout.

line	comp (after rounding)
1000	8500
10000	120000
100000	1500000
1000000	19000000

comparison = lines*log(lines), nlogn algorithm with some constant that should be omitted in Big-O notation.

----------------------------------------------------------------------------

2. Use the time command to compare the overall performance of sfrob, sfrobu, sfrobs, sfrobu -f, and sfrobs -f.


generate file with specified size

[classzfu@lnxsrv07 ~/35l/hw5]$ dd if=/dev/urandom of=1mb.txt bs=1024000 count=1
1+0 records in
1+0 records out
1024000 bytes (1.0 MB) copied, 0.109437 s, 9.4 MB/s
[classzfu@lnxsrv07 ~/35l/hw5]$ dd if=/dev/urandom of=2mb.txt bs=1024000 count=2
2+0 records in
2+0 records out
2048000 bytes (2.0 MB) copied, 0.216905 s, 9.4 MB/s
[classzfu@lnxsrv07 ~/35l/hw5]$ dd if=/dev/urandom of=5mb.txt bs=1024000 count=5
5+0 records in
5+0 records out
5120000 bytes (5.1 MB) copied, 0.565169 s, 9.1 MB/s
[classzfu@lnxsrv07 ~/35l/hw5]$ dd if=/dev/urandom of=10mb.txt bs=1024000 count=10
10+0 records in
10+0 records out
10240000 bytes (10 MB) copied, 1.08226 s, 9.5 MB/s
[classzfu@lnxsrv07 ~/35l/hw5]$ dd if=/dev/urandom of=20mb.txt bs=1024000 count=20
20+0 records in
20+0 records out
20480000 bytes (20 MB) copied, 2.17918 s, 9.4 MB/s

----------------------------------------------------------------------------

1MB

[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob < 1mb.txt > dump

real    0m0.100s
user    0m0.049s
sys     0m0.005s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu < 1mb.txt > dump

real    0m1.175s
user    0m0.084s
sys     0m1.075s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs < 1mb.txt > dump

real    0m0.020s
user    0m0.007s
sys     0m0.007s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu -f < 1mb.txt > dump

real    0m1.181s
user    0m0.062s
sys     0m1.105s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs -f < 1mb.txt > dump

real    0m0.023s
user    0m0.007s
sys     0m0.010s

----------------------------------------------------------------------------

2MB

[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob < 2mb.txt > dump                    
real    0m0.168s
user    0m0.095s
sys     0m0.009s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu < 2mb.txt > dump

real    0m2.325s
user    0m0.143s
sys     0m2.162s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs < 2mb.txt > dump

real    0m0.056s
user    0m0.013s
sys     0m0.013s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu -f < 2mb.txt > dump

real    0m2.246s
user    0m0.143s
sys     0m2.083s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs -f < 2mb.txt > dump

real    0m0.059s
user    0m0.011s
sys     0m0.012s

----------------------------------------------------------------------------

5MB

[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob < 5mb.txt > dump

real    0m0.394s
user    0m0.233s
sys     0m0.014s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu < 5mb.txt > dump

real    0m5.372s
user    0m0.339s
sys     0m4.988s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs < 5mb.txt > dump

real    0m0.102s
user    0m0.028s
sys     0m0.019s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu -f < 5mb.txt > dump

real    0m5.666s
user    0m0.326s
sys     0m5.276s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs -f < 5mb.txt > dump

real    0m0.089s
user    0m0.017s
sys     0m0.029s

----------------------------------------------------------------------------

10MB

[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob < 10mb.txt > dump                   
real    0m0.659s
user    0m0.476s
sys     0m0.013s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu < 10mb.txt > dump

real    0m11.374s
user    0m0.622s
sys     0m10.662s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs < 10mb.txt > dump

real    0m0.158s
user    0m0.057s
sys     0m0.037s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu -f < 10mb.txt > dump

real    0m11.262s
user    0m0.685s
sys     0m10.485s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs -f < 10mb.txt > dump

real    0m0.166s
user    0m0.046s
sys     0m0.035s

----------------------------------------------------------------------------

1000 lines

[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob < l1000.txt > dump

real    0m0.004s
user    0m0.002s
sys     0m0.000s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu < l1000.txt > dump

real    0m0.010s
user    0m0.002s
sys     0m0.007s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu -f < l1000.txt > dump

real    0m0.009s
user    0m0.001s
sys     0m0.006s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs< l1000.txt > dump

real    0m0.008s
user    0m0.003s
sys     0m0.003s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs -f < l1000.txt > dump

real    0m0.006s
user    0m0.002s
sys     0m0.004s

----------------------------------------------------------------------------

10000 lines

[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob < l10000.txt > dump                 
real    0m0.010s
user    0m0.006s
sys     0m0.001s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu < l10000.txt > dump

real    0m0.063s
user    0m0.007s
sys     0m0.054s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu -f < l10000.txt > dump

real    0m0.068s
user    0m0.006s
sys     0m0.060s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs < l10000.txt > dump

real    0m0.011s
user    0m0.005s
sys     0m0.005s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs -f < l10000.txt > dump

real    0m0.013s
user    0m0.004s
sys     0m0.007s

----------------------------------------------------------------------------

100000 lines

[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob -f < l100000.txt > dump

real    0m0.065s
user    0m0.053s
sys     0m0.006s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrob < l100000.txt > dump

real    0m0.063s
user    0m0.054s
sys     0m0.003s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu < l100000.txt > dump

real    0m0.601s
user    0m0.065s
sys     0m0.531s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobu -f < l100000.txt > dump

real    0m0.612s
user    0m0.077s
sys     0m0.529s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs < l100000.txt > dump

real    0m0.060s
user    0m0.048s
sys     0m0.008s
[classzfu@lnxsrv07 ~/35l/hw5]$ time ./sfrobs -f < l100000.txt > dump

real    0m0.059s
user    0m0.048s
sys     0m0.009s

----------------------------------------------------------------------------

1000000 lines

[classzfu@lnxsrv09 ~/35l/hw5]$ time ./sfrob < l1000000.txt > dump

real    0m1.109s
user    0m0.716s
sys     0m0.032s
[classzfu@lnxsrv09 ~/35l/hw5]$ time ./sfrobu < l1000000.txt > dump

real    0m6.852s
user    0m0.795s
sys     0m5.997s
[classzfu@lnxsrv09 ~/35l/hw5]$ time ./sfrobu -f < l1000000.txt > dump

real    0m6.929s
user    0m0.955s
sys     0m5.926s
[classzfu@lnxsrv09 ~/35l/hw5]$ time ./sfrobs < l1000000.txt > dump

real    0m0.674s
user    0m0.604s
sys     0m0.039s
[classzfu@lnxsrv09 ~/35l/hw5]$ time ./sfrobs -f < l1000000.txt > dump

real    0m0.697s
user    0m0.640s
sys     0m0.032s

----------------------------------------------------------------------------

As we can see that sfrobs is the fastest version.
sfrob is in the middle in term of speed.
sfrobu is the slowest.
The reason is that sfrobs use the bash shell, the child shell which can contact with parent shell and OS kernel.
Also bash shell is incorporated in GNU, so the calls in it more direct and efficient.
The c functions in c library <stdio.h> is also efficient, it take much of the standard input to a buffer in user mode at once (as we see in strace).
The sfrobu is the slowest, because it takes in one char from stdin at a time, which consumes most of time in OS mode.
The time it uses in user space outside the kernal is actually not that much.
Also, the '-f' flag on the programs take more time in
general, since it performs extra operations to change the case.