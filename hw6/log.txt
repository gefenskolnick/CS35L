#check the version of coreutils

$ export PATH=/usr/local/cs/bin/:$PATH
$ echo $PATH
	/usr/local/cs/bin/:/usr/lib64/qt-3.3/bin:/u/eng/class/classzfu/perl5/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/u/eng/class/classzfu/bin
$ sort --version
	sort (GNU coreutils) 8.27
	Copyright (C) 2017 Free Software Foundation, Inc.
	License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
	This is free software: you are free to change and redistribute it.
	There is NO WARRANTY, to the extent permitted by law.

	Written by Mike Haertel and Paul Eggert.

----------------------------------------------------------------------------

#generate a file containing 10,000,000 random floats

$ od -An -N 40000000 -f < /dev/random | tr -s ' ' '\n'> floats.txt
$ cat floats | wc -l
	10000001
$ emacs floats.txt
//delete the first line of white space of the floats.txt
$ cat floats | wc -l
	10000000

----------------------------------------------------------------------------

#sort with --parallel

$ time -p sort -g floats > /dev/null
real 20.76
user 112.30
sys 0.43
$ time -p sort -g --parallel=1 floats > /dev/null
real 109.26
user 109.08
sys 0.18
$ time -p sort -g --parallel=2 floats > /dev/null
real 58.05
user 110.38
sys 0.30
$ time -p sort -g --parallel=4 floats > /dev/null
real 33.53
user 109.43
sys 0.35
$ time -p sort -g --parallel=8 floats > /dev/null
real 20.87
user 112.29
sys 0.45

The --parallel option enables sort with multi-threading.
The result is reduction real time, as more threads are concurrently operating.
The first sort without specifying the number of threads automatically operate with --parallel=8 approximately.

user time = real time * number of threads (if number of threads is comparatively small)

----------------------------------------------------------------------------

#Further Analysis

$ time -p sort -g --parallel=16 floats > /dev/null
real 16.82
user 136.74
sys 0.66
$ time -p sort -g --parallel=32 floats > /dev/null
real 14.80
user 184.60
sys 0.87
$ time -p sort -g --parallel=64 floats > /dev/null
real 14.50
user 186.44
sys 1.32
$ time -p sort -g --parallel=128 floats > /dev/null
real 14.78
user 183.88
sys 2.05
$ time -p sort -g --parallel=256 floats > /dev/null
real 15.42
user 189.15
sys 1.85

TOO MUCH threads will eventually lead to inefficiency.